Evan
Kristen
Ryan
Connor
1. check if on master branch (or what other branch you are on)
2. pull from master (git pull origin master) to ensure all code on local computer is up to date;
3. use git checkout -b branch-name to create and checkout a new branch
4. work on what you need to in that branch
5. add and commit work to the branch. **always at least commit work on the branch
you are working on before switching branches**he
6. push work to the branch using git push origin branch-name
7. create a pull request by clicking the link in the terminal or clicking the branch link in the terminal.
8. merge the branch with the master branch.
9. pull new code merged to master again to update your local files.
--use git branch to check what branch you are on, and git checkout to switch branches.







Correy
Ethan
Eleanor
Lening
*************
FROM INTELLIJ
*************
1. git branch
2. git checkout -b "name of your choice"
3. git add .
4. git commit -m "message"
5. git push origin "branch name"
************
FROM GIT HUB
************
1. select "branches"
2. select "create pull request"
3. select "merge pull request"
4. select "confirm pull request"
*************
FROM INTELLIJ
*************
1. git branch master
2. git checkout master
3. git pull origin master










John Brooks
Matthew Baker
Salah Ismail
Will Tisdale (edited)
To begin, create a new branch using git checkout - b branch-name-here
*No need to put quotations around branch name*
Make changes to existing file or create new file.
*This way you have changes to upload to the new branch that are different from the master.*
Use git add and git commit -m"" as usual.
When you are on final step instead of git push origin master switch "master" for "branch-name-here"
*This practice allows you to upload the code for review without affecting a live site or the master project*
At this point, go to GitHub.
You can do so through your browser, or there should be a link after you push to the new branch in the subsequent terminal code.
The link will take you to your branches page on GitHub.
Once there, make sure you see the status "Able to Merge" at top of page.
Then, you will be able to select "Create Pull Request".
On the ensuing page, there is a message that says "This branch has no conflicts with the base branch".
If you see this message, go ahead and click "Merge Pull Request"
Next, select "Confirm Merge" to finalize.
Return to IntelliJ (or terminal you are using) and use git checkout master
Follow that with git pull origin master and the files should now be synced locally.